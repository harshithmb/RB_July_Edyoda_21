{"version":3,"sources":["components/Topbar/index.js","components/Banner/index.js","redux/actions/index.js","App.js","reportWebVitals.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["Topbar","this","props","userType","count","Component","connect","state","Banner","incrementValue","increAction","decrementValue","decreAction","onClick","dispatch","payload","type","incrementAction","decrementAction","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","addReducer","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"sNAGaA,EAAb,4JACE,WAAU,IAAD,EACqBC,KAAKC,MAAzBC,EADD,EACCA,SAAUC,EADX,EACWA,MAClB,OACE,8BACE,2CACYD,EADZ,MACyBC,WANjC,GAA4BC,aAkBbC,eALS,SAACC,GAAD,MAAY,CAClCJ,SAAUI,EAAMJ,SAChBC,MAAOG,EAAMH,SAGyB,KAAzBE,CAA+BN,GCjBjCQ,EAAb,4MACEC,eAAiB,WACf,EAAKP,MAAMQ,YAAY,IAF3B,EAIEC,eAAiB,WACf,EAAKT,MAAMU,YAAY,IAL3B,4CAOE,WACE,OACE,gCACE,uBACA,wCACA,wBAAQC,QAASZ,KAAKQ,eAAtB,uBACA,wBAAQI,QAASZ,KAAKU,eAAtB,8BAbR,GAA4BN,aAwBbC,cAAQ,MALI,SAACQ,GAAD,MAAe,CACxCJ,YAAa,SAACK,GAAD,OAAaD,ECxBG,SAACC,GAE9B,MAAO,CAELC,KAAM,YACND,WDmBiCE,CAAgBF,KACnDH,YAAa,SAACG,GAAD,OAAaD,EChBG,SAACC,GAAD,MAAc,CAC3CC,KAAM,YACND,WDcmCG,CAAgBH,QAGtCT,CAAkCE,GEdlCW,EAVH,WACV,OACE,gCACE,qCACA,cAAC,EAAD,IACA,cAAC,EAAD,QCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCPRQ,EAAe,CACnBzB,MAAO,EACPD,SAAU,QAiBG2B,MAdf,WAA8D,IAA1CvB,EAAyC,uDAAjCsB,EAAiC,yCAAjBb,EAAiB,EAAjBA,KAAMD,EAAW,EAAXA,QAChD,OAAQC,GACN,IAAK,YAEH,OAAO,2BAAKT,GAAZ,IAAmBH,MAAOG,EAAMH,MAAQW,IAE1C,IAAK,YACH,OAAO,2BAAKR,GAAZ,IAAmBH,MAAOG,EAAMH,MAAQW,IAE1C,QACE,OAAOR,ICVEwB,EAFDC,YAAYC,GCK1BC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.f91a3b56.chunk.js","sourcesContent":["import React, { Component } from \"react\"; // rcredux\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Topbar extends Component {\r\n  render() {\r\n    const { userType, count } = this.props;\r\n    return (\r\n      <div>\r\n        <h1>\r\n          Topbar - {userType} - {count}\r\n        </h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userType: state.userType,\r\n  count: state.count,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Topbar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { incrementAction, decrementAction } from \"../../redux/actions\";\r\n\r\nexport class Banner extends Component {\r\n  incrementValue = () => {\r\n    this.props.increAction(1);\r\n  };\r\n  decrementValue = () => {\r\n    this.props.decreAction(1);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <hr />\r\n        <h1>Banner</h1>\r\n        <button onClick={this.incrementValue}>Increment</button>\r\n        <button onClick={this.decrementValue}>Decrement</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  increAction: (payload) => dispatch(incrementAction(payload)),\r\n  decreAction: (payload) => dispatch(decrementAction(payload)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Banner);\r\n","export const incrementAction = (payload) => {\r\n  debugger;\r\n  return {\r\n    // rxaction\r\n    type: \"INCREMENT\",\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const decrementAction = (payload) => ({\r\n  type: \"DECREMENT\",\r\n  payload,\r\n});\r\n","import React from \"react\";\nimport Topbar from \"./components/Topbar\";\nimport Banner from \"./components/Banner\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1>App</h1>\n      <Topbar />\n      <Banner />\n    </div>\n  );\n};\n\nexport default App;\n\n// npm i redux\n// yarn add redux\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n  count: 0,\r\n  userType: \"USER\",\r\n};\r\n\r\nfunction addReducer(state = initialState, { type, payload }) {\r\n  switch (type) {\r\n    case \"INCREMENT\": {\r\n      debugger;\r\n      return { ...state, count: state.count + payload };\r\n    }\r\n    case \"DECREMENT\": {\r\n      return { ...state, count: state.count - payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default addReducer;\r\n","import { createStore } from \"redux\";\r\nimport reducers from \"../reducers\";\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}